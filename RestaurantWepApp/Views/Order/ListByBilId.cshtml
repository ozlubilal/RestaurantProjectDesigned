@model List<Business.Dtos.Responses.OrderResponseDto>

@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewData["Title"] = "Siparişler";
}

<div class="container mt-4">
    <h2 class="mb-4">Sipariş Listesi</h2>

    <!-- Yeni Sipariş Ekle Button -->
    <a class="btn btn-primary mb-3" asp-action="Add">
        Yeni Sipariş Ekle
    </a>

    <!-- Orders Table -->
    <div class="card">
        <div class="card-header">
            Sipariş Listesi <h5>@ViewBag.bill.CreatedDate.ToString("dd/MM/yyyy") - @ViewBag.bill.TableName</h5>
        </div>
        <div class="card-body">
            <table class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>Ürün Adı</th>
                        <th>Adet</th>
                        <th>Fiyat</th>
                        <th>Durum</th>
                        <th>İşlemler</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.Count; i++)
                    {
                        var order = Model[i];
                        <tr>
                            <td>@(i + 1)</td>
                            <td>@order.ProductName</td>
                            <td>@order.Quantity</td>
                            <td>@order.Price</td>
                            <td>@order.Status</td>
                            <td>
                                <!-- Edit Button -->
                                <button class="btn btn-warning btn-sm" onclick="openEditModal('@order.Id', @order.Quantity, '@order.Status')">
                                    Düzenle
                                </button>
                                <!-- Delete Button -->
                                <button class="btn btn-danger btn-sm" onclick="deleteOrder('@order.Id')">
                                    Sil
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Edit Modal -->
<div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editModalLabel">Sipariş Düzenle</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Kapat">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="editOrderForm">
                    <div class="form-group">
                        <label for="quantity">Adet:</label>
                        <input type="number" class="form-control" id="quantity" required />
                    </div>
                    <div class="form-group">
                        <label for="status">Durum:</label>
                        <select class="form-control" id="status" required>
                            <option value="1">Hazırlanıyor</option>
                            <option value="2">Bekliyor</option>
                            <option value="3">Servis Edildi</option>
                        </select>
                    </div>
                    <input type="hidden" id="orderId" />
                    <button type="submit" class="btn btn-primary">Güncelle</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            window.deleteOrder = function (id) {
                if (confirm('Bu siparişi silmek istediğinizden emin misiniz?')) {
                    $.ajax({
                        url: '@Url.Action("Delete", "Order")/' + id,
                        type: 'POST',
                        data: {
                            __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val() // CSRF token
                        },
                        success: function (response) {
                            if (response.success) {
                                location.reload();
                            } else {
                                alert(response.message);
                            }
                        },
                        error: function () {
                            alert('Sipariş silinirken bir hata oluştu.');
                        }
                    });
                }
            };

            window.openEditModal = function (id, quantity, status) {
                $('#orderId').val(id);
                $('#quantity').val(quantity);
                $('#status').val(status);
                $('#editModal').modal('show');
            };

            $('#editOrderForm').on('submit', function (e) {
                e.preventDefault();
                var id = $('#orderId').val();
                var quantity = $('#quantity').val();
                var status = $('#status').val();

                $.ajax({
                    url: '@Url.Action("Update", "Order")',
                    type: 'POST',
                    data: {
                        id: id,
                        quantity: quantity,
                        status: status,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val() // CSRF token
                    },
                    success: function (response) {
                        if (response.success) {
                            location.reload();
                        } else {
                            alert(response.message);
                        }
                    },
                    error: function () {
                        alert('Sipariş güncellenirken bir hata oluştu.');
                    }
                });
            });
        });
    </script>
}
